#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W     &kp E         &kp R         &kp T                                         &kp Y            &kp U  &kp I      &kp O      &kp P
&kp A             &kp S     &kp D         &kp F         &kp G      &mkp MCLK           &lt 5 EQUAL    &kp H            &kp J  &kp K      &kp L      &mt RIGHT_WIN ENTER
&mt LEFT_SHIFT Z  &kp X     &kp C         &kp V         &kp B      &lt 6 CAPSLOCK      &lt 4 MINUS    &kp N            &kp M  &mkp LCLK  &mkp RCLK  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LCMD  &kp LEFT_ALT  &lt 1 ESCAPE  &kp SPACE  &lt 3 TAB           &kp BACKSPACE  &lt 2 RC(SPACE)                               &mt RIGHT_CONTROL DELETE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        Symbol {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                      &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp GRAVE        &trans       &trans    &trans      &trans       &trans      &trans  &trans     &kp SEMICOLON  &kp SQT       &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans           &trans       &trans    &trans      &trans       &trans      &trans  &trans     &trans         &kp COMMA     &kp PERIOD            &kp BACKSLASH
&trans           &trans       &trans    &trans      &trans       &trans      &trans  &trans                                                        &trans
            >;
        };

        Number {
            bindings = <
&kp F1              &kp F2        &kp F3        &kp F4        &kp F5                          &kp F6        &kp F7        &kp F8     &kp F9      &kp F10
&kp NUMBER_1        &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5   &trans      &kp EQUAL  &kp NUMBER_6  &kp N7        &kp N8     &kp N9      &kp N0
&mt LEFT_SHIFT F11  &kp F12       &kp F13       &kp F14       &kp F15  &trans      &kp MINUS  &kp PLUS      &kp ASTERISK  &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT SLASH
&trans              &trans        &trans        &trans        &trans   &trans      &trans     &trans                                             &trans
            >;
        };

        ARROW {
            bindings = <
&kp LG(LEFT_ARROW)  &kp LS(LC(TAB))         &kp UP_ARROW          &kp LC(TAB)              &kp LG(RIGHT_ARROW)                             &kp LG(LEFT_ARROW)  &kp RS(RC(TAB))         &kp UP_ARROW         &kp RC(TAB)              &kp RG(RIGHT_ARROW)
&kp HOME            &kp LEFT_ARROW          &kp DOWN_ARROW        &kp RIGHT_ARROW          &kp END              &trans      &kp PAGE_UP    &kp HOME            &kp LEFT_ARROW          &kp DOWN_ARROW       &kp RIGHT_ARROW          &kp END
&kp LSHIFT          &kp LG(LC(LEFT_ARROW))  &kp RS(LEFT_CONTROL)  &kp LG(LC(RIGHT_ARROW))  &trans               &trans      &kp PAGE_DOWN  &trans              &kp RG(RC(LEFT_ARROW))  &kp RC(RIGHT_SHIFT)  &kp RG(RC(RIGHT_ARROW))  &trans
&trans              &trans                  &trans                &trans                   &trans               &trans      &trans         &kp RG(TAB)                                                                               &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &mkp MB3      &trans  &trans  &mkp MB5  &mkp MB3  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &mkp MB4  &mkp MB1  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans                                &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
